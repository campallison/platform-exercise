AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  platform-exercise
  
  Fender platform-exercise for Allison Hanna interview January 2021

Globals:
  Function:
    Timeout: 5
Parameters:
  PostgresURI:
    Default: ""
    Description: "Postgres url"
    Type: String
  SigningSecret:
    Default: ""
    Description: "JWT token signing secret"
    Type: String

Resources:
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create-user/
      Handler: create-user
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /user
            Method: POST
      Environment:
        Variables:
          postgresURL: !Ref PostgresURI
  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-user/
      Handler: get-user
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: GET
            RequestParameters:
              - method.request.path.id:
                  Required: true
      Environment:
        Variables:
          postgresURL: !Ref PostgresURI
          SigningSecret: !Ref SigningSecret
  UpdateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update-user/
      Handler: update-user
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: PATCH
            RequestParameters:
              - method.request.path.id:
                  Required: true
      Environment:
        Variables:
          postgresURL: !Ref PostgresURI
          SigningSecret: !Ref SigningSecret
  DeleteUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete-user/
      Handler: delete-user
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: DELETE
            RequestParameters:
              - method.request.path.id:
                  Required: true
      Environment:
        Variables:
          postgresURL: !Ref PostgresURI
          SigningSecret: !Ref SigningSecret
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: login/
      Handler: login
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /login
            Method: POST
      Environment:
        Variables:
          postgresURL: !Ref PostgresURI
          SigningSecret: !Ref SigningSecret
  LogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: logout/
      Handler: logout
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /logout/{id}
            Method: POST
            RequestParameters:
              - method.request.path.id:
                  Required: true
      Environment:
        Variables:
          postgresURL: !Ref PostgresURI
          SigningSecret: !Ref SigningSecret
  ValidateEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: validate-email/
      Handler: validate-email
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /validate-email
            Method: POST
  CheckPasswordStrengthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: password-strength/
      Handler: password-strength
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /password-strength
            Method: POST
